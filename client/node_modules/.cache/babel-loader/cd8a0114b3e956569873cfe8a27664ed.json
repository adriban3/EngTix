{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n/* eslint-disable jsx-a11y/label-has-for */\n\n\nvar propTypes = {\n  inline: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  title: _propTypes.default.string,\n\n  /**\n   * Only valid if `inline` is not set.\n   */\n  validationState: _propTypes.default.oneOf(['success', 'warning', 'error', null]),\n\n  /**\n   * Attaches a ref to the `<input>` element. Only functions can be used here.\n   *\n   * ```js\n   * <Checkbox inputRef={ref => { this.input = ref; }} />\n   * ```\n   */\n  inputRef: _propTypes.default.func\n};\nvar defaultProps = {\n  inline: false,\n  disabled: false,\n  title: ''\n};\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Checkbox, _React$Component);\n\n  function Checkbox() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        inline = _this$props.inline,\n        disabled = _this$props.disabled,\n        validationState = _this$props.validationState,\n        inputRef = _this$props.inputRef,\n        className = _this$props.className,\n        style = _this$props.style,\n        title = _this$props.title,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"inline\", \"disabled\", \"validationState\", \"inputRef\", \"className\", \"style\", \"title\", \"children\"]);\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var input = _react.default.createElement(\"input\", (0, _extends2.default)({}, elementProps, {\n      ref: inputRef,\n      type: \"checkbox\",\n      disabled: disabled\n    }));\n\n    if (inline) {\n      var _classes2;\n\n      var _classes = (_classes2 = {}, _classes2[(0, _bootstrapUtils.prefix)(bsProps, 'inline')] = true, _classes2.disabled = disabled, _classes2); // Use a warning here instead of in propTypes to get better-looking\n      // generated documentation.\n\n\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(!validationState, '`validationState` is ignored on `<Checkbox inline>`. To display ' + 'validation state on an inline checkbox, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : void 0;\n      return _react.default.createElement(\"label\", {\n        className: (0, _classnames.default)(className, _classes),\n        style: style,\n        title: title\n      }, input, children);\n    }\n\n    var classes = (0, _extends2.default)({}, (0, _bootstrapUtils.getClassSet)(bsProps), {\n      disabled: disabled\n    });\n\n    if (validationState) {\n      classes[\"has-\" + validationState] = true;\n    }\n\n    return _react.default.createElement(\"div\", {\n      className: (0, _classnames.default)(className, classes),\n      style: style\n    }, _react.default.createElement(\"label\", {\n      title: title\n    }, input, children));\n  };\n\n  return Checkbox;\n}(_react.default.Component);\n\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\n\nvar _default = (0, _bootstrapUtils.bsClass)('checkbox', Checkbox);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}