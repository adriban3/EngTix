{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Andrew\\\\Documents\\\\Code\\\\EngTix\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Andrew\\\\Documents\\\\Code\\\\EngTix\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Andrew\\\\Documents\\\\Code\\\\EngTix\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Andrew\\\\Documents\\\\Code\\\\EngTix\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Andrew\\\\Documents\\\\Code\\\\EngTix\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\Code\\\\EngTix\\\\client\\\\src\\\\pages\\\\Requests\\\\Requests.js\";\nimport React, { Component } from 'react';\nimport './Requests.css';\nimport Jumbotron from 'react-bootstrap/lib/Jumbotron';\nimport Table from 'react-bootstrap/lib/Table';\nimport API from '../../utils/API';\n\nvar Requests =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Requests, _Component);\n\n  function Requests(props) {\n    var _this;\n\n    _classCallCheck(this, Requests);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Requests).call(this, props));\n    _this.state = {\n      tickets: [] //potentially add state var arr that pulls in table header names so that these aren't hard coded\n\n    };\n    return _this;\n  }\n\n  _createClass(Requests, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.case !== prevProps.case) {\n        API.getAllRequests().then(function (res) {\n          _this2.setState({\n            tickets: res.data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      //need to setup API and API call here to pull all users from db\n      API.getAllRequests().then(function (res) {\n        _this3.setState({\n          tickets: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Requestor\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"SU\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"ICE Score\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Active\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Phase\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Next Steps\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Lead\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.tickets.map(function (tickets, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, tickets.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, tickets.requestor), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, tickets.su), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, tickets.ice), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, tickets.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, tickets.active), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, tickets.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, tickets.phase), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, tickets.next), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, tickets.lead));\n      }))));\n    }\n  }]);\n\n  return Requests;\n}(Component);\n\nexport default Requests;","map":{"version":3,"sources":["C:\\Users\\Andrew\\Documents\\Code\\EngTix\\client\\src\\pages\\Requests\\Requests.js"],"names":["React","Component","Jumbotron","Table","API","Requests","props","state","tickets","prevProps","case","getAllRequests","then","res","setState","data","map","i","title","requestor","su","ice","type","active","status","phase","next","lead"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Requests.css';\nimport Jumbotron from 'react-bootstrap/lib/Jumbotron';\nimport Table from 'react-bootstrap/lib/Table';\nimport API from '../../utils/API';\n\nclass Requests extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tickets: []\n            //potentially add state var arr that pulls in table header names so that these aren't hard coded\n        }\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.case !== prevProps.case) {\n            API.getAllRequests()\n                .then(res => {\n                    this.setState({tickets: res.data});\n                })\n        }\n    }\n\n    componentDidMount() {\n        //need to setup API and API call here to pull all users from db\n        API.getAllRequests()\n            .then(res => {\n                this.setState({tickets: res.data});\n            })\n    };\n\n    render() {\n        return(\n                <Jumbotron>\n                    <Table striped bordered condensed hover responsive>\n                        <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Requestor</th>\n                                <th>SU</th>\n                                <th>ICE Score</th>\n                                <th>Type</th>\n                                <th>Active</th>\n                                <th>Status</th>\n                                <th>Phase</th>\n                                <th>Next Steps</th>\n                                <th>Lead</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.tickets.map((tickets, i) => (\n                                <tr key={i}>\n                                    <td>{tickets.title}</td>\n                                    <td>{tickets.requestor}</td>\n                                    <td>{tickets.su}</td>\n                                    <td>{tickets.ice}</td>\n                                    <td>{tickets.type}</td>\n                                    <td>{tickets.active}</td>\n                                    <td>{tickets.status}</td>\n                                    <td>{tickets.phase}</td>\n                                    <td>{tickets.next}</td>\n                                    <td>{tickets.lead}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Jumbotron>\n        )\n    }\n}\n\nexport default Requests;"]},"metadata":{},"sourceType":"module"}